suite: Test Workspaces
templates:
  - workspace.yaml
release:
  namespace: test-namespace
tests:
  - it: Dev S3 module name label override
    set:
      global.name: mntl-test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.labels.name
          value: mntl-test-app-s3
  - it: Dev S3 module workspace name override
    set:
      global.name: mntl-test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
        terraform:
          defaultVars:
            workspaceNameOverride: i-have-been-overwritten
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.name
          value: i-have-been-overwritten
      - notContains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: workspaceNameOverride
            sensitive: false
            value: i-have-been-overwritten
  - it: Dev S3 module workspace name does not repeat mntl-prefix
    set:
      global.name: mntl-test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-app-s3
  - it: Dev S3 module workspace ignores env override when added explicitly
    set:
      global.name: mntl-test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
        terraform:
          defaultVars:
            enable_versioning: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: enable_versioning
            sensitive: false
            value: "true"
  - it: Dev S3 module workspace adds correct env override
    set:
      global.name: mntl-test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: enable_versioning
            sensitive: false
            value: "false"
  - it: Dev S3 module workspace
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: Workspace
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-app-s3
      - equal:
          path: spec.module.source
          value: app.terraform.io/Mintel/private-s3-bucket/aws
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations["app.mintel.com/altManifestFileSuffix"]
          value: mntl-test-app-s3
      - equal:
          path: metadata.annotations["argocd.argoproj.io/sync-wave"]
          value: "-40"
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: name
            sensitive: false
            value: mntl-test-app
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: tfcloud_agent
            sensitive: false
            value: "true"
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: eks_cluster_name
            sensitive: false
            value: cluster1
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: aws_region
            sensitive: false
            value: eu-west-1
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: aws_account_name
            sensitive: false
            value: dev
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: output_secret_name
            sensitive: false
            value: test-namespace/mntl-test-app/s3
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: true
            key: secret_tags
            sensitive: false
            value: '{access-project = "test-namespace-ops"}'
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: true
            key: tags
            sensitive: false
            value: |-
              {
                Application = "test-app"
                Owner = "sre"
                Project = "test-project"
              }
  - it: Test workspace extra annotations
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-allow-destroy"]
          value: "true"
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-cloud-tags"]
          value: "env:dev,owner:sre,mod:s3"
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-owner"]
          value: sre
  - it: Test workspace extra annotations override
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
        terraform:
          defaultVars:
            workspaceOwner: override
            workspaceAllowDestroy: false
            workspaceTags: test
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-allow-destroy"]
          value: "false"
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-cloud-tags"]
          value: "test"
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-owner"]
          value: override
      - notContains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: workspaceOwner
            sensitive: false
            value: override
      - notContains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: false
            key: workspaceAllowDestroy
            sensitive: false
            value: false
      - hasDocuments:
          count: 1
  - it: Test workspace allow destroy env
    set:
      global.name: test-app
      global.clusterEnv: prod
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - equal:
          path: metadata.annotations["app.mintel.com/terraform-allow-destroy"]
          value: "false"
  - it: Dev S3 module workspace with multiple instances
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
        terraform:
          instances:
            test-bucket: {}
            test-bucket-another: {}
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-bucket-s3
        documentIndex: 0
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-bucket-another-s3
        documentIndex: 1
  - it: Dev S3 module workspace with modified syncWave
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
      s3.syncWave: "200"
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: Workspace
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-app-s3
      - equal:
          path: spec.module.source
          value: app.terraform.io/Mintel/private-s3-bucket/aws
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations["app.mintel.com/altManifestFileSuffix"]
          value: mntl-test-app-s3
      - equal:
          path: metadata.annotations["argocd.argoproj.io/sync-wave"]
          value: "200"
  - it: Dev S3 module workspace with default (0) syncWave
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3.enabled: true
      s3.syncWave: "0"
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: Workspace
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: metadata.name
          value: dev-eu-west-1-cluster1-test-namespace-mntl-test-app-s3
      - equal:
          path: spec.module.source
          value: app.terraform.io/Mintel/private-s3-bucket/aws
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations["app.mintel.com/altManifestFileSuffix"]
          value: mntl-test-app-s3
      - equal:
          path: metadata.annotations["argocd.argoproj.io/sync-wave"]
          value: "0"
  - it: Dev S3 module workspace with multiple instances and syncWave overrides
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      s3:
        enabled: true
        terraform:
          instances:
            test-bucket:
              syncWave: "200"
            test-bucket-another:
              syncWave: "300"
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.annotations["argocd.argoproj.io/sync-wave"]
          value: "200"
        documentIndex: 0
      - equal:
          path: metadata.annotations["argocd.argoproj.io/sync-wave"]
          value: "300"
        documentIndex: 1
  - it: Dev S3 module workspace - tags
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      sqs:
        enabled: true
        eventBus:
          enabled: true
        terraform:
          instances:
            test-sqs:
              tags:
                ExtraTagOne: "testTagValueOne"
                ExtraTagTwo: "testTagValueTwo"
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: true
            key: tags
            sensitive: false
            value: |-
              {
                Application = "test-app"
                ExtraTagOne = "testTagValueOne"
                ExtraTagTwo = "testTagValueTwo"
                MintelEventBus = "true"
                Owner = "sre"
                Project = "test-project"
              }
  - it: Dev S3 module workspace with multiple instances - tags
    set:
      global.name: test-app
      global.clusterEnv: dev
      global.clusterName: cluster1
      global.clusterRegion: eu-west-1
      global.owner: sre
      global.partOf: test-project
      sqs:
        enabled: true
        eventBus:
          enabled: true
        terraform:
          instances:
            test-instance-one: { tags: { ExtraTagOne: "testTagValueOne" } }
            test-instance-two:
              {
                tags:
                  {
                    ExtraTagOne: "testTagValueOne",
                    ExtraTagTwo: "testTagValueTwo",
                  },
              }
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - hasDocuments:
          count: 2
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: true
            key: tags
            sensitive: false
            value: |-
              {
                Application = "test-app"
                ExtraTagOne = "testTagValueOne"
                MintelEventBus = "true"
                Owner = "sre"
                Project = "test-project"
              }
        documentIndex: 0
      - contains:
          path: spec.variables
          content:
            environmentVariable: false
            hcl: true
            key: tags
            sensitive: false
            value: |-
              {
                Application = "test-app"
                ExtraTagOne = "testTagValueOne"
                ExtraTagTwo = "testTagValueTwo"
                MintelEventBus = "true"
                Owner = "sre"
                Project = "test-project"
              }
        documentIndex: 1
