Check utilization takes precedence over average value when both specified:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "100"
          metricType: Utilization
          type: cpu
        - metadata:
            value: "50"
          metricType: Utilization
          type: memory
Creates a ScaledObject for a Deployment:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
Creates a ScaledObject for a StatefulSet:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: StatefulSet
        name: example-app
Creates a ScaledObject for a custom scaleTargetRef:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v2
        kind: CustomResource
        name: example-app
Creates a ScaledObject with advanced settings:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced:
        horizontalPodAutoscalerConfig:
          behavior:
            scaleDown:
              policies:
                - periodSeconds: 15
                  type: Percent
                  value: 100
              stabilizationWindowSeconds: 300
          name: test-hpa
        restoreToOriginalReplicaCount: true
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
Creates a ScaledObject with both targetCPUAverageValue and targetMemoryAverageValue triggers:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "101"
          metricType: AverageValue
          type: cpu
        - metadata:
            value: "51"
          metricType: AverageValue
          type: memory
Creates a ScaledObject with both targetCPUAverageValue trigger:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "101"
          metricType: AverageValue
          type: cpu
Creates a ScaledObject with both targetCPUUtilizationPercentage and targetMemoryUtilizationPercentage triggers:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "100"
          metricType: Utilization
          type: cpu
        - metadata:
            value: "50"
          metricType: Utilization
          type: memory
Creates a ScaledObject with custom triggers:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            metricName: http_requests_total
            query: sum(rate(http_requests_total{service="podinfo-http"}[2m]))
            serverAddress: http://prometheus-k8s.monitoring.svc:9090
            threshold: "5"
          type: prometheus
        - metadata:
            metricName: http_requests_total
            query: sum(rate(http_requests_total{service="podinfo-grpc"}[5m]))
            serverAddress: http://prometheus-k8s.monitoring.svc:9090
            threshold: "10"
          type: prometheus
Creates a ScaledObject with default fallback based on minReplicaCount:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 1
        replicas: 3
      maxReplicaCount: 5
      minReplicaCount: 3
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
Creates a ScaledObject with explicit fallback settings:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 1
        replicas: 10
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
Creates a ScaledObject with targetCPUUtilizationPercentage trigger:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "100"
          metricType: Utilization
          type: cpu
Creates a ScaledObject with targetMemoryAverageValue trigger:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "51"
          metricType: AverageValue
          type: memory
Creates a ScaledObject with targetMemoryUtilizationPercentage trigger:
  1: |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: example-app
        app.mintel.com/application: example-app
        app.mintel.com/component: example-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: example-app
      name: example-app
      namespace: test-namespace
    spec:
      advanced: {}
      cooldownPeriod: 300
      fallback:
        failureThreshold: 3
        replicas: 2
      maxReplicaCount: 5
      minReplicaCount: 2
      pollingInterval: 30
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: example-app
      triggers:
        - metadata:
            value: "50"
          metricType: Utilization
          type: memory
