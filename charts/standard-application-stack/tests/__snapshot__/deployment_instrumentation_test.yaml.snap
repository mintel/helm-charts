Check custom python otel extraEnv vars are added:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        secret.reloader.stakater.com/reload: test-app-app
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
                - name: OTEL_TRACES_EXPORTER
                  value: otlp
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://grafana-agent.monitoring.svc.cluster.local:4317
                - name: OTEL_METRICS_EXPORTER
                  value: none
                - name: OTEL_SERVICE_NAME
                  value: test-app
                - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: OTEL_TRACES_SAMPLER
                  value: parentbased_always_on
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP),container=main
                - name: python-specific
                  value: value
                - name: OTEL_PYTHON_EXCLUDED_URLS
                  value: /health[zy]?,/liveness,/ready[z]?,/readiness,/external-health-check,/metrics,/favicon.ico,/static.*
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                    - NET_BIND_SERVICE
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
                volumes:
                  '[*].name':
                    notIn:
                      - name
                      - configMap
                      - csi
                      - downwardAPI
                      - emptyDir
                      - ephemeral
                      - persistentVolumeClaim
                      - projected
                      - secret
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            volumes:
              '[*].name':
                notIn:
                  - name
                  - configMap
                  - csi
                  - downwardAPI
                  - emptyDir
                  - ephemeral
                  - persistentVolumeClaim
                  - projected
                  - secret
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
Check custom sampler settings:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        secret.reloader.stakater.com/reload: test-app-app
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
                - name: OTEL_TRACES_EXPORTER
                  value: otlp
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://grafana-agent.monitoring.svc.cluster.local:4317
                - name: OTEL_METRICS_EXPORTER
                  value: none
                - name: OTEL_SERVICE_NAME
                  value: test-app
                - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: OTEL_TRACES_SAMPLER
                  value: always_on
                - name: OTEL_TRACES_SAMPLER_ARG
                  value: 0.001
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP),container=main
                - name: OTEL_PYTHON_EXCLUDED_URLS
                  value: /health[zy]?,/liveness,/ready[z]?,/readiness,/external-health-check,/metrics,/favicon.ico,/static.*
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                    - NET_BIND_SERVICE
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
                volumes:
                  '[*].name':
                    notIn:
                      - name
                      - configMap
                      - csi
                      - downwardAPI
                      - emptyDir
                      - ephemeral
                      - persistentVolumeClaim
                      - projected
                      - secret
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            volumes:
              '[*].name':
                notIn:
                  - name
                  - configMap
                  - csi
                  - downwardAPI
                  - emptyDir
                  - ephemeral
                  - persistentVolumeClaim
                  - projected
                  - secret
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
Check default python otel envars are added:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        secret.reloader.stakater.com/reload: test-app-app
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
                - name: OTEL_TRACES_EXPORTER
                  value: otlp
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://grafana-agent.monitoring.svc.cluster.local:4317
                - name: OTEL_METRICS_EXPORTER
                  value: none
                - name: OTEL_SERVICE_NAME
                  value: test-app
                - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: OTEL_TRACES_SAMPLER
                  value: parentbased_always_on
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP),container=main
                - name: OTEL_PYTHON_EXCLUDED_URLS
                  value: /health[zy]?,/liveness,/ready[z]?,/readiness,/external-health-check,/metrics,/favicon.ico,/static.*
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                    - NET_BIND_SERVICE
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
                volumes:
                  '[*].name':
                    notIn:
                      - name
                      - configMap
                      - csi
                      - downwardAPI
                      - emptyDir
                      - ephemeral
                      - persistentVolumeClaim
                      - projected
                      - secret
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            volumes:
              '[*].name':
                notIn:
                  - name
                  - configMap
                  - csi
                  - downwardAPI
                  - emptyDir
                  - ephemeral
                  - persistentVolumeClaim
                  - projected
                  - secret
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
Check global otel extraEnv vars are added:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        secret.reloader.stakater.com/reload: test-app-app
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
                - name: OTEL_TRACES_EXPORTER
                  value: otlp
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://grafana-agent.monitoring.svc.cluster.local:4317
                - name: OTEL_METRICS_EXPORTER
                  value: none
                - name: OTEL_SERVICE_NAME
                  value: test-app
                - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: OTEL_TRACES_SAMPLER
                  value: parentbased_always_on
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP),container=main
                - name: otel-global
                  value: value
                - name: OTEL_PYTHON_EXCLUDED_URLS
                  value: /health[zy]?,/liveness,/ready[z]?,/readiness,/external-health-check,/metrics,/favicon.ico,/static.*
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                    - NET_BIND_SERVICE
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000
                volumes:
                  '[*].name':
                    notIn:
                      - name
                      - configMap
                      - csi
                      - downwardAPI
                      - emptyDir
                      - ephemeral
                      - persistentVolumeClaim
                      - projected
                      - secret
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            volumes:
              '[*].name':
                notIn:
                  - name
                  - configMap
                  - csi
                  - downwardAPI
                  - emptyDir
                  - ephemeral
                  - persistentVolumeClaim
                  - projected
                  - secret
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
