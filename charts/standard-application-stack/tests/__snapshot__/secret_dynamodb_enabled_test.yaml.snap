Check DynamoDB Secret Store Override:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/application: test-app
        app.mintel.com/component: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app-dynamodb
      namespace: test-namespace
    spec:
      data:
        - remoteRef:
            key: test-namespace/test-app/dynamodb
            property: DYNAMODB_TABLE_NAME
          secretKey: DYNAMODB_TABLE_NAME
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: some-other-secret-store
      target:
        creationPolicy: Owner
Check DynamoDB Secret is present for local environment:
  1: |
    apiVersion: v1
    data:
      DYNAMODB_TABLE_NAME: dGVzdC1hcHAtZHluYW1vZGI=
    kind: Secret
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/application: test-app
        app.mintel.com/component: test-app
        app.mintel.com/env: local
        app.mintel.com/region: local
        name: test-app
      name: test-app-dynamodb
      namespace: test-namespace
    type: Opaque
Check DynamoDB refresh interval override:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/application: test-app
        app.mintel.com/component: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app-dynamodb
      namespace: test-namespace
    spec:
      data:
        - remoteRef:
            key: test-namespace/test-app/dynamodb
            property: DYNAMODB_TABLE_NAME
          secretKey: DYNAMODB_TABLE_NAME
      refreshInterval: 10m5s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-default
      target:
        creationPolicy: Owner
Check DynamoDB remoteRef key is present:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/application: test-app
        app.mintel.com/component: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app-dynamodb
      namespace: test-namespace
    spec:
      data:
        - remoteRef:
            key: test-namespace/test-app/dynamodb
            property: DYNAMODB_TABLE_NAME
          secretKey: DYNAMODB_TABLE_NAME
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-default
      target:
        creationPolicy: Owner
Check DynamoDB secretPath override:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        app.mintel.com/placeholder: placeholder
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/application: test-app
        app.mintel.com/component: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app-dynamodb
      namespace: test-namespace
    spec:
      data:
        - remoteRef:
            key: overridePath
            property: DYNAMODB_TABLE_NAME
          secretKey: DYNAMODB_TABLE_NAME
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-default
      target:
        creationPolicy: Owner
