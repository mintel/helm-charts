Check default container args:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        helm.sh/chart: standard-application-stack-4.0.1
        secret.reloader.stakater.com/reload: test-app-app,test-app-oauth
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
            - args:
                - --redirect-url=https:///oauth2/callback
                - --upstream=http://localhost:8000
                - --http-address=http://0.0.0.0:4180
                - --provider=oidc
                - --skip-auth-regex=^/ping$
                - --skip-auth-regex=^/healthz$
                - --skip-auth-regex=^/readiness$
                - --skip-auth-regex=^/external-health-check$
                - --skip-provider-button=true
                - --skip-jwt-bearer-tokens=true
                - --ssl-insecure-skip-verify=true
                - --ssl-upstream-insecure-skip-verify=true
                - --oidc-groups-claim=groups
                - --metrics-address=http://0.0.0.0:9090
                - --email-domain=*
                - --oidc-issuer-url=https://oauth.mintel.com
                - --insecure-oidc-allow-unverified-email=true
                - --cookie-secure=false
                - --user-id-claim=sub
                - --scope=openid profile email
              env: null
              envFrom:
                - secretRef:
                    name: test-app-oauth
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              name: auth-proxy
              ports:
                - containerPort: 4180
                  name: auth-proxy
                - containerPort: 9090
                  name: metrics
              readinessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            runAsUser: 1000
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
          volumes: null
Check setting skip-auth-regex from extra passed in values:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        helm.sh/chart: standard-application-stack-4.0.1
        secret.reloader.stakater.com/reload: test-app-app,test-app-oauth
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
            - args:
                - --redirect-url=https:///oauth2/callback
                - --upstream=http://localhost:8000
                - --http-address=http://0.0.0.0:4180
                - --provider=oidc
                - --skip-auth-regex=^/ping$
                - --skip-auth-regex=^/healthz$
                - --skip-auth-regex=^/readiness$
                - --skip-auth-regex=^/external-health-check$
                - --skip-auth-regex=^/readyz$
                - --skip-provider-button=true
                - --skip-jwt-bearer-tokens=true
                - --ssl-insecure-skip-verify=true
                - --ssl-upstream-insecure-skip-verify=true
                - --oidc-groups-claim=groups
                - --metrics-address=http://0.0.0.0:9090
                - --email-domain=*
                - --oidc-issuer-url=https://oauth.mintel.com
                - --insecure-oidc-allow-unverified-email=true
                - --cookie-secure=false
                - --user-id-claim=sub
                - --scope=openid profile email
              env: null
              envFrom:
                - secretRef:
                    name: test-app-oauth
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              name: auth-proxy
              ports:
                - containerPort: 4180
                  name: auth-proxy
                - containerPort: 9090
                  name: metrics
              readinessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            runAsUser: 1000
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
          volumes: null
Check setting skip-auth-regex from extra passed in values when they already contain start/end meta-characters:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        helm.sh/chart: standard-application-stack-4.0.1
        secret.reloader.stakater.com/reload: test-app-app,test-app-oauth
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
            - args:
                - --redirect-url=https:///oauth2/callback
                - --upstream=http://localhost:8000
                - --http-address=http://0.0.0.0:4180
                - --provider=oidc
                - --skip-auth-regex=^/ping$
                - --skip-auth-regex=^/healthz$
                - --skip-auth-regex=^/readiness$
                - --skip-auth-regex=^/external-health-check$
                - --skip-auth-regex=^/readyz$
                - --skip-provider-button=true
                - --skip-jwt-bearer-tokens=true
                - --ssl-insecure-skip-verify=true
                - --ssl-upstream-insecure-skip-verify=true
                - --oidc-groups-claim=groups
                - --metrics-address=http://0.0.0.0:9090
                - --email-domain=*
                - --oidc-issuer-url=https://oauth.mintel.com
                - --insecure-oidc-allow-unverified-email=true
                - --cookie-secure=false
                - --user-id-claim=sub
                - --scope=openid profile email
              env: null
              envFrom:
                - secretRef:
                    name: test-app-oauth
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              name: auth-proxy
              ports:
                - containerPort: 4180
                  name: auth-proxy
                - containerPort: 9090
                  name: metrics
              readinessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            runAsUser: 1000
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
          volumes: null
Check setting skip-auth-regex from overridden health-check values:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        helm.sh/chart: standard-application-stack-4.0.1
        secret.reloader.stakater.com/reload: test-app-app,test-app-oauth
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz-overridden
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness-overridden
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz-overridden
                  port: http
                  scheme: HTTP
                periodSeconds: 5
            - args:
                - --redirect-url=https:///oauth2/callback
                - --upstream=http://localhost:8000
                - --http-address=http://0.0.0.0:4180
                - --provider=oidc
                - --skip-auth-regex=^/ping$
                - --skip-auth-regex=^/healthz-overridden$
                - --skip-auth-regex=^/readiness-overridden$
                - --skip-auth-regex=^/external-health-check-overridden$
                - --skip-provider-button=true
                - --skip-jwt-bearer-tokens=true
                - --ssl-insecure-skip-verify=true
                - --ssl-upstream-insecure-skip-verify=true
                - --oidc-groups-claim=groups
                - --metrics-address=http://0.0.0.0:9090
                - --email-domain=*
                - --oidc-issuer-url=https://oauth.mintel.com
                - --insecure-oidc-allow-unverified-email=true
                - --cookie-secure=false
                - --user-id-claim=sub
                - --scope=openid profile email
              env: null
              envFrom:
                - secretRef:
                    name: test-app-oauth
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              name: auth-proxy
              ports:
                - containerPort: 4180
                  name: auth-proxy
                - containerPort: 9090
                  name: metrics
              readinessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            runAsUser: 1000
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
          volumes: null
Check sidecar present if enabled:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        helm.sh/chart: standard-application-stack-4.0.1
        secret.reloader.stakater.com/reload: test-app-app,test-app-oauth
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: test-app
      namespace: test-namespace
    spec:
      minReadySeconds: 10
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: app
          app.kubernetes.io/name: test-app
      strategy:
        rollingUpdate:
          maxSurge: 15%
          maxUnavailable: 10%
        type: RollingUpdate
      template:
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: app
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            app.mintel.com/env: qa
            app.mintel.com/region: ${CLUSTER_REGION}
            name: test-app
        spec:
          containers:
            - command:
                - /app/docker-entrypoint.sh
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: APP_ENVIRONMENT
                  value: qa
                - name: RUNTIME_ENVIRONMENT
                  value: kubernetes
              envFrom:
                - secretRef:
                    name: test-app-app
              image: registry.gitlab.com/test:v0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              name: main
              ports:
                - containerPort: 8000
                  name: http
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
              resources:
                limits: {}
                requests: {}
              startupProbe:
                failureThreshold: 60
                httpGet:
                  path: /healthz
                  port: http
                  scheme: HTTP
                periodSeconds: 5
            - args:
                - --redirect-url=https:///oauth2/callback
                - --upstream=http://localhost:8000
                - --http-address=http://0.0.0.0:4180
                - --provider=oidc
                - --skip-auth-regex=^/ping$
                - --skip-auth-regex=^/healthz$
                - --skip-auth-regex=^/readiness$
                - --skip-auth-regex=^/external-health-check$
                - --skip-provider-button=true
                - --skip-jwt-bearer-tokens=true
                - --ssl-insecure-skip-verify=true
                - --ssl-upstream-insecure-skip-verify=true
                - --oidc-groups-claim=groups
                - --metrics-address=http://0.0.0.0:9090
                - --email-domain=*
                - --oidc-issuer-url=https://oauth.mintel.com
                - --insecure-oidc-allow-unverified-email=true
                - --cookie-secure=false
                - --user-id-claim=sub
                - --scope=openid profile email
              env: null
              envFrom:
                - secretRef:
                    name: test-app-oauth
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              name: auth-proxy
              ports:
                - containerPort: 4180
                  name: auth-proxy
                - containerPort: 9090
                  name: metrics
              readinessProbe:
                httpGet:
                  path: /ping
                  port: auth-proxy
                  scheme: HTTP
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
          imagePullSecrets:
            - name: image-pull-gitlab
            - name: image-pull-docker-hub
          securityContext:
            runAsUser: 1000
          serviceAccountName: test-app
          terminationGracePeriodSeconds: 30
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: app
                  app.kubernetes.io/name: test-app
              maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
          volumes: null
