suite: Test ExternalSecret Creation
templates:
- secrets.yaml
release:
  namespace: test-namespace
tests:
- it: ensures ArgoCD annotations are populated
  set:
    global.clusterEnv: test
    externalSecret:
      enabled: true
      argo:
        hook: PreSync
        hookDeletePolicy: HookSucceeded
        syncWave: "-1"
  asserts:
  - matchSnapshot: {}
  - hasDocuments:
      count: 1
  - equal:
      path: metadata.annotations["argocd.argoproj.io/hook"]
      value: PreSync
  - equal:
      path: metadata.annotations["argocd.argoproj.io/hook-delete-policy"]
      value: HookSucceeded
  - equal:
      path: metadata.annotations["argocd.argoproj.io/sync-wave"]
      value: "-1"
- it: Extra secrets with output secret map
  set:
    global.clusterEnv: test
    externalSecret:
      enabled: false
    extraSecrets:
      - name: 'extra-secret'
        outputSecretMap:
          TEST_BUCKET_ID: BUCKET_ID
  asserts:
    - matchSnapshot: {}
    - hasDocuments:
        count: 1
      documentIndex: 0
    - isKind:
        of: ExternalSecret
      documentIndex: 0
    - equal:
        path: metadata.namespace
        value: test-namespace
      documentIndex: 0
    - equal:
        path: metadata.name
        value: example-app-extra-secret
      documentIndex: 0
    - contains:
        path: spec.data
        content:
          secretKey: TEST_BUCKET_ID
          remoteRef:
            key: test-namespace/example-app/extra-secret
            property: BUCKET_ID
      documentIndex: 0
    - isNull:
        path: spec.dataFrom
      documentIndex: 0
    - equal:
        path: spec.secretStoreRef.kind
        value: SecretStore
      documentIndex: 0
    - hasDocuments:
        count: 1
    - equal:
        path: spec.secretStoreRef.name
        value: aws-secrets-manager-default
      documentIndex: 0
