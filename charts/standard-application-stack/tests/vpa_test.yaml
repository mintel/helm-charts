suite: Test VerticalPodAutoscalers
templates:
  - vpa.yaml
release:
  namespace: test-namespace
tests:
  - it: Doesn't create a VerticalPodAutoscaler
    set:
      global.clusterEnv: qa
      verticalPodAutoscaler.enabled: false
      statefulset: false
      cronjobsOnly: false
    asserts:
      - hasDocuments:
          count: 0

  - it: Creates a VerticalPodAutoscaler for a Deployment
    set:
      global.clusterEnv: qa
      verticalPodAutoscaler.enabled: true
      statefulset: false
      cronjobsOnly: false
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: VerticalPodAutoscaler
      - equal:
          path: metadata.namespace
          value: test-namespace
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: deployment-example-app
      - equal:
          path: spec.targetRef.apiVersion
          value: apps/v1
      - equal:
          path: spec.targetRef.kind
          value: Deployment
      - equal:
          path: spec.targetRef.name
          value: example-app
      - equal:
          path: spec.updatePolicy.updateMode
          value: "Off"

  - it: Creates a VerticalPodAutoscaler for a StatefulSet
    set:
      global.clusterEnv: qa
      verticalPodAutoscaler.enabled: true
      statefulset: true
      cronjobsOnly: false
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: VerticalPodAutoscaler
      - equal:
          path: metadata.namespace
          value: test-namespace
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: statefulset-example-app
      - equal:
          path: spec.targetRef.apiVersion
          value: apps/v1
      - equal:
          path: spec.targetRef.kind
          value: StatefulSet
      - equal:
          path: spec.targetRef.name
          value: example-app
      - equal:
          path: spec.updatePolicy.updateMode
          value: "Off"

  - it: Only creates VerticalPodAutoscaler for CronJobs if cronjobsOnly is true
    set:
      global.clusterEnv: qa
      verticalPodAutoscaler.enabled: true
      cronjobsOnly: true
      cronjobs.jobs:
        - name: daily
          concurrencyPolicy: Forbid
          suspend: false
          restartPolicy: Never
          schedule: "0 0 * * *"
          image: ""
          command: [/bin/sh]
          args:
            - "-c"
            - "NO_MIGRATE=1"
            - "/app/docker-entrypoint.sh"
            - "manage"
            - "daily"
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: VerticalPodAutoscaler
      - equal:
          path: metadata.namespace
          value: test-namespace
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: cronjob-example-app-daily
      - equal:
          path: spec.targetRef.apiVersion
          value: batch/v1
      - equal:
          path: spec.targetRef.kind
          value: CronJob
      - equal:
          path: spec.targetRef.name
          value: example-app-daily
      - equal:
          path: spec.updatePolicy.updateMode
          value: "Off"

  - it: Creates a VerticalPodAutoscaler with autoscaling enabled
    set:
      global.clusterEnv: qa
      verticalPodAutoscaler.enabled: true
      verticalPodAutoscaler.autoscalingEnabled: true
      statefulset: false
      cronjobsOnly: false
    asserts:
      - matchSnapshot: {} # Check for regressions and unexpected changes.
      - isKind:
          of: VerticalPodAutoscaler
      - equal:
          path: metadata.namespace
          value: test-namespace
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: deployment-example-app
      - equal:
          path: spec.targetRef.apiVersion
          value: apps/v1
      - equal:
          path: spec.targetRef.kind
          value: Deployment
      - equal:
          path: spec.targetRef.name
          value: example-app
      - equal:
          path: spec.updatePolicy.updateMode
          value: Auto
