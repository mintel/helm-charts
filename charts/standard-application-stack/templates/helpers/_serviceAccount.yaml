{{/* vim: set filetype=mustache: */}}

{{/*
Template for creating a ServiceAccount. Expects a list [$, config] as context where "config" is a dict containing the
following optional kwargs:

annotations: dict
argo: dict
automountServiceAccountToken: bool
irsa: dict
name: str

*/}}
{{- define "mintel_common.serviceAccount" -}}
{{ $ := index . 0 }}
{{ $config := index . 1}}
apiVersion: {{ include "common.capabilities.serviceaccount.apiVersion" $ }}
kind: ServiceAccount
metadata:
  name: {{ $config.name | default (include "mintel_common.fullname" $) }}
  namespace: {{ $.Release.Namespace }}
  labels: {{ include "mintel_common.labels" $ | nindent 4 }}
  annotations:
    {{ include "mintel_common.commonAnnotations" $ | nindent 4 }}
    {{ if $config.annotations }}{{ $config.annotations | toYaml | nindent 4 }}{{ end }}
    {{ if (and $config.irsa.enabled (ne $.Values.global.clusterEnv "local")) }}
    {{ if $.Values.global.terraform.irsa }}
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ $.Values.global.cloudProvider.accountId }}:role/app-iam-{{ $.Values.global.clusterName }}-{{ $.Release.Namespace }}-{{ coalesce .irsa.nameOverride .name (include "mintel_common.fullname" .) }}
    {{- else }}
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ $.Values.global.cloudProvider.accountId }}:role/{{ $.Values.global.clusterName }}-{{ $.Release.Namespace }}-{{ coalesce .irsa.nameOverride .name (include "mintel_common.fullname" .) }}
    {{- end }}
    {{- end }}
    {{ if $config.argo }}
    {{ include "mintel_common.argoAnnotations" $config.argo | nindent 4 }}
    {{ end }}
automountServiceAccountToken: {{ $config.automountServiceAccountToken | default true }}
{{- end -}}
