{{- if (and .Values.externalSecret .Values.externalSecret.enabled) }}
{{- if (eq .Values.global.clusterEnv "local") }}
{{- if .Values.externalSecret.localValues }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-app
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- range (required ".externalSecret.localValues required for local env" .Values.externalSecret.localValues) }}
  {{ .name }}: {{ .value | b64enc }}
  {{- end }}
{{- end }}
{{- else }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-app
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .Values.externalSecret.pathOverride | default (printf "%s/%s/app" (.Release.Namespace) (include "mintel_common.fullname" .)) }}
  refreshInterval: {{ .Values.externalSecret.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.externalSecret.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- end }}
{{- end }}


{{- range .Values.extraSecrets }}
{{- $secretData := dict "Release" $.Release "Chart" $.Chart "Values" $.Values "component" .name }}
{{- if (eq $.Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" $ }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" $secretData }}
  labels: {{ include "mintel_common.labels" $secretData | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" $ | nindent 4 }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
data:
  {{- range (required ".localValues required for local env" .localValues) }}
  {{ .name }}: {{ .value | b64enc }}
  {{- end }}
{{- else }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" $ }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" $secretData }}
  labels: {{ include "mintel_common.labels" $secretData | nindent 4 }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" $ | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .pathOverride | default (printf "%s/%s/%s" $.Release.Namespace (include "mintel_common.fullname" $) .name) }}
  refreshInterval: {{ .refreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.mariadb .Values.mariadb.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-mariadb
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  data:
    {{- $dataKey := ( .Values.mariadb.secretPathOverride | default (printf "%s/%s/mariadb" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    - secretKey: DB_HOST
      remoteRef:
        key: {{ $dataKey }}
        property: host
    - secretKey: DB_NAME
      remoteRef:
        key: {{ $dataKey }}
        property: dbname
    - secretKey: DB_USER
      remoteRef:
        key: {{ $dataKey }}
        property: username
    - secretKey: DB_PASSWORD
      remoteRef:
        key: {{ $dataKey }}
        property: password
  refreshInterval: {{ .Values.mariadb.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.mariadb.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-mariadb
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  DB_HOST: {{ printf "%s-mariadb" (include "mintel_common.fullname" .) | b64enc }}
  DB_NAME: {{ .Values.mariadb.auth.database | b64enc }}
  DB_USER: {{ .Values.mariadb.auth.username | b64enc }}
  DB_PASSWORD: {{ .Values.mariadb.auth.password | b64enc }}
  mariadb-root-password: {{ .Values.mariadb.auth.password | b64enc }}
  mariadb-password: {{ .Values.mariadb.auth.password | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.dynamodb .Values.dynamodb.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-dynamodb
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  data:
    {{- $dataKey := ( .Values.dynamodb.secretPathOverride | default (printf "%s/%s/dynamodb" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    - secretKey: DYNAMODB_TABLE_NAME
      remoteRef:
        key: {{ $dataKey }}
        property: DYNAMODB_TABLE_NAME
  refreshInterval: {{ .Values.dynamodb.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.dynamodb.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-dynamodb
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  DYNAMODB_TABLE_NAME: {{ printf "%s-dynamodb" (include "mintel_common.fullname" .) | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.redis .Values.redis.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-redis
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .Values.redis.secretPathOverride | default (printf "%s/%s/redis" (.Release.Namespace) (include "mintel_common.fullname" .)) }}
  refreshInterval: {{ .Values.redis.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.redis.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-redis
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  REDIS_PRIMARY_ENDPOINT: {{ printf "%s-redis-headless:6379" (include "mintel_common.fullname" .) | b64enc }}
  REDIS_AUTH_TOKEN: {{ .Values.redis.auth.password | default "test" | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.s3 .Values.s3.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-s3
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  data:
    {{- $dataKey := ( .Values.s3.secretPathOverride | default (printf "%s/%s/s3" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    - secretKey: BUCKET_NAME
      remoteRef:
        key: {{ $dataKey }}
        property: BUCKET_NAME
  refreshInterval: {{ .Values.s3.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.s3.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-s3
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  BUCKET_NAME: {{ printf "%s-s3" (include "mintel_common.fullname" .) | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if (and .Values.elasticsearch .Values.elasticsearch.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-elasticsearch
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .Values.elasticsearch.secretPathOverride | default (printf "%s/%s/elasticsearch" (.Release.Namespace) (include "mintel_common.fullname" .)) }}
  data:
    {{- $dataKey := ( .Values.elasticsearch.secretPathOverride | default (printf "%s/%s/elasticsearch" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    - secretKey: ES_HOSTS
      remoteRef:
        key: {{ $dataKey }}
        property: ELASTICSEARCH_HOST
  refreshInterval: {{ .Values.elasticsearch.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.elasticsearch.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-elasticsearch
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ELASTICSEARCH_HOST: {{ printf "%s-elasticsearch-master-headless" (include "mintel_common.fullname" .) | b64enc }}
  ES_HOSTS: {{ printf "%s-elasticsearch-master-headless" (include "mintel_common.fullname" .) | b64enc }}
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.opensearch .Values.opensearch.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-opensearch
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .Values.opensearch.secretPathOverride | default (printf "%s/%s/opensearch" (.Release.Namespace) (include "mintel_common.fullname" .)) }}
  data:
    {{- $dataKey := ( .Values.opensearch.secretPathOverride | default (printf "%s/%s/opensearch" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    {{- if (not .Values.opensearch.awsEsProxy.enabled) }}
    - secretKey: ES_HOSTS
      remoteRef:
        key: {{ $dataKey }}
        property: OPENSEARCH_HOST
    {{- end }}
    - secretKey: ELASTICSEARCH_HOST
      remoteRef:
        key: {{ $dataKey }}
        property: OPENSEARCH_HOST
  refreshInterval: {{ .Values.opensearch.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.opensearch.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-opensearch
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ELASTICSEARCH_HOST: {{ printf "http://opensearch-cluster-master-headless:5601" | b64enc }}
  {{- if (not .Values.opensearch.awsEsProxy.enabled) }}
  ES_HOSTS: {{ printf "http://opensearch-cluster-master-headless:5601" | b64enc }}
  {{- end }}
  OPENSEARCH_HOST: {{ printf "http://opensearch-cluster-master-headless:5601" | b64enc }}
  OPENSEARCH_DASHBOARD_HOST: {{ printf "%s-opensearch-dashboards" (include "mintel_common.fullname" .) | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if not .Values.global.terraform.externalSecrets }}
{{- if (and .Values.postgresql .Values.postgresql.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  name: {{ include "mintel_common.fullname" . }}-postgresql
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  data:
    {{- $dataKey := ( .Values.postgresql.secretPathOverride | default (printf "%s/%s/postgres" (.Release.Namespace) (include "mintel_common.fullname" .))) }}
    - secretKey: DB_HOST
      remoteRef:
        key: {{ $dataKey }}
        property: host
    - secretKey: DB_NAME
      remoteRef:
        key: {{ $dataKey }}
        property: dbname
    - secretKey: DB_USER
      remoteRef:
        key: {{ $dataKey }}
        property: username
    - secretKey: DB_PASSWORD
      remoteRef:
        key: {{ $dataKey }}
        property: password
    - secretKey: DB_PORT
      remoteRef:
        key: {{ $dataKey }}
        property: port
  refreshInterval: {{ .Values.postgresql.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.postgresql.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  name: {{ include "mintel_common.fullname" . }}-postgresql
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  DB_HOST: {{ printf "%s-postgresql" (include "mintel_common.fullname" .) | b64enc }}
  DB_NAME: {{ .Values.postgresql.auth.database | b64enc }}
  DB_USER: {{ .Values.postgresql.auth.username | b64enc }}
  DB_PASSWORD: {{ .Values.postgresql.auth.password | b64enc }}
  DB_PORT: {{ .Values.postgresql.auth.port | default "5432" | b64enc }}
  postgresql-postgres-password: {{ .Values.postgresql.auth.password | b64enc }}
  postgresql-password: {{ .Values.postgresql.auth.password | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if (and .Values.oauthProxy .Values.oauthProxy.enabled) }}
{{- if (ne .Values.global.clusterEnv "local") }}
---
apiVersion: {{ include "common.capabilities.externalsecret.apiVersion" . }}
kind: ExternalSecret
metadata:
  {{- if .Values.oauthProxy.secretNameOverride }}
  name: {{ .Values.oauthProxy.secretNameOverride }}
  {{- else if .Values.oauthProxy.secretSuffix }}
  name: {{ printf "%s-%s" (include "mintel_common.fullname" .) .Values.oauthProxy.secretSuffix }}
  {{- else }}
  name: {{ printf "%s-oauth" (include "mintel_common.fullname" .) }}
  {{- end }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  dataFrom:
    - key: {{ .Values.oauthProxy.secretPathOverride | default (printf "%s/%s/oauth" (.Release.Namespace) (include "mintel_common.fullname" .)) }}
  refreshInterval: {{ .Values.oauthProxy.secretRefreshIntervalOverride | default "5m0s" }}
  secretStoreRef:
    name: {{ .Values.oauthProxy.secretStoreRefOverride | default "aws-secrets-manager-default" }}
    kind: SecretStore
  target:
    creationPolicy: Owner
{{- else }}
---
apiVersion: {{ include "common.capabilities.secret.apiVersion" . }}
kind: Secret
metadata:
  {{- if .Values.oauthProxy.secretNameOverride }}
  name: {{ .Values.oauthProxy.secretNameOverride }}
  {{- else if .Values.oauthProxy.secretSuffix }}
  name: {{ printf "%s-%s" (include "mintel_common.fullname" .) .Values.oauthProxy.secretSuffix }}
  {{- else }}
  name: {{ printf "%s-oauth" (include "mintel_common.fullname" .) }}
  {{- end }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- range (required ".Values.oauthProxy.localSecretValues required for local env" .Values.oauthProxy.localSecretValues) }}
  {{ .name }}: {{ .value | b64enc }}
  {{- end }}
{{- end }}
{{- end }}
