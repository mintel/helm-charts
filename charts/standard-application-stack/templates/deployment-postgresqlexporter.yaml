{{- if (and .Values.postgresql .Values.postgresql.enabled) }}
{{- if (and .Values.postgresql.metrics .Values.postgresql.metrics.enabled) }}
{{- $data := dict "Release" .Release "Chart" .Chart "Values" .Values "component" "postgresqlexporter" }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "mintel_common.fullname" $data }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
    secret.reloader.stakater.com/reload: {{ default (include "mintel_common.defaultPostgresqlSecretName" .) .Values.postgresql.secretNameOverride }}
    app.mintel.com/opa-allow-single-replica: "true"
  labels: {{ include "mintel_common.labels" $data | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "mintel_common.selectorLabels" $data | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels: {{ include "mintel_common.labels" $data | nindent 8 }}
    spec:
      {{- include "mintel_common.imagePullSecrets" . | nindent 6 }}
      {{- if (and .Values.serviceAccount (or .Values.serviceAccount.create .Values.serviceAccount.name)) }}
      serviceAccountName: {{ default (include "mintel_common.fullname" .) .Values.serviceAccount.name }}
      {{- end }}
      containers:
        - name: main
          image: {{ default "index.docker.io/bitnami/postgres-exporter:0.10.0-debian-10-r169" .Values.postgresql.metrics.imageOverride }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          env:
            - name: KUBERNETES_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: 'true'
            - name: DATA_SOURCE_URI
              value: "$(DB_HOST):$(DB_PORT)/postgres?sslmode=disable"
            - name: DATA_SOURCE_USER
              value: "$(DB_USER)"
            - name: DATA_SOURCE_PASS
              value: "$(DB_PASSWORD)"
          envFrom:
            - secretRef:
                name: {{ default (include "mintel_common.defaultPostgresqlSecretName" .) .Values.postgresql.secretNameOverride }}
          ports:
            - containerPort: 9187
              name: metrics
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          {{- with .Values.postgresql.metrics.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}
