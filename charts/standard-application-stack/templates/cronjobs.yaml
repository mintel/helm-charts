{{- range .Values.cronjobs.jobs }}
---
{{- $data := dict "Release" $.Release "Chart" $.Chart "Values" $.Values "component" .name }}
apiVersion: {{ include "common.capabilities.cronjob.apiVersion" $ }}
kind: CronJob
metadata:
  name: {{ include "mintel_common.fullname" $data }}
  labels: {{ include "mintel_common.labels" $data | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" $ | nindent 4 }}
  namespace: {{ $.Release.Namespace }}
spec:
  concurrencyPolicy: {{ coalesce .concurrencyPolicy $.Values.cronjobs.defaults.concurrencyPolicy }}
  {{- if (coalesce .suspend $.Values.cronjobs.defaults.suspend) }}
  suspend: true
  {{- else }}
  suspend: false
  {{- end }}
  schedule: {{ quote .schedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels: {{ include "mintel_common.labels" $data | nindent 12 }}
        spec:
          {{- include "mintel_common.imagePullSecrets" $ | nindent 10 }}
          {{- if .includeBasePodSecurityContext }}
          {{- with $.Values.podSecurityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .podSecurityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- if (and $.Values.serviceAccount (or $.Values.serviceAccount.create $.Values.serviceAccount.name)) }}
          serviceAccountName: {{ default (include "mintel_common.fullname" $) $.Values.serviceAccount.name }}
          {{- end }}
          restartPolicy: {{ coalesce .restartPolicy $.Values.cronjobs.defaults.restartPolicy }}
          {{- with .extraInitContainers }}
          initContainers:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: main
              image: {{ coalesce .image (include "mintel_common.image" $) }}
              imagePullPolicy: {{ include "mintel_common.imagePullPolicy" $ }}
              {{- with .command }}
              command: {{ toYaml . | nindent 16 }}
              {{- end }}
              {{- with .args }}
              args: {{ toYaml . | nindent 16 }}
              {{- end }}
              env:
                - name: KUBERNETES_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                {{- include "mintel_common.localDevEnv" $ | nindent 16 }}
                {{- include "mintel_common.defaultEnv" $ | nindent 16 }}
                {{- if .includeMailhogEnv }}
                {{- include "mintel_common.mailhogEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeRedisEnv }}
                {{- include "mintel_common.redisEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeElasticsearchEnv }}
                {{- include "mintel_common.elasticsearchEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeOpensearchEnv }}
                {{- include "mintel_common.opensearchEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeLocalstackEnv }}
                {{- include "mintel_common.localstackEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeEventBusEnv }}
                {{- include "mintel_common.eventBusEnv" $ | nindent 16 }}
                {{- end }}
                {{- if .includeBaseEnv }}
                {{- with $.Values.env }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
                {{- end }}
                {{- with .env }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
              envFrom:
                {{- if (and $.Values.externalSecret $.Values.externalSecret.enabled) }}
                {{- if (or (ne $.Values.global.clusterEnv "local") (and (eq $.Values.global.clusterEnv "local") $.Values.externalSecret.localValues)) }}
                {{- if .includeAppSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultAppSecretName" $) $.Values.externalSecret.nameOverride }}
                {{- end }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.mariadb $.Values.mariadb.enabled) }}
                {{- if .includeMariadbSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultMariadbSecretName" $) $.Values.mariadb.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.dynamodb $.Values.dynamodb.enabled) }}
                {{- if .includeDynamodbSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultDynamodbSecretName" $) $.Values.dynamodb.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.postgresql $.Values.postgresql.enabled) }}
                {{- if .includePostgesqlSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultPostgresqlSecretName" $) $.Values.postgresql.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.redis $.Values.redis.enabled) }}
                {{- if .includeRedisSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultRedisSecretName" $) $.Values.redis.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.elasticsearch $.Values.elasticsearch.enabled) }}
                {{- if .includeElasticsearchSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultElasticsearchSecretName" $) $.Values.elasticsearch.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if (and $.Values.opensearch $.Values.opensearch.enabled) }}
                {{- if .includeOpensearchSecret }}
                - secretRef:
                    name: {{ default (include "mintel_common.defaultOpensearchSecretName" $) $.Values.opensearch.secretNameOverride }}
                {{- end }}
                {{- end }}
                {{- if .includeBaseEnv }}
                {{- with $.Values.envFrom }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
                {{- end }}
                {{- with .envFrom }}
                {{- toYaml . | nindent 16 }}
                {{- end }}
              {{- with .resources }}
              resources: {{- toYaml . | nindent 16 }}
              {{- end }}

{{- end }}
