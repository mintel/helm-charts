{{- if (ne .Values.global.clusterEnv "local") }}
{{- if .Values.networkPolicy.enabled }}
---
kind: NetworkPolicy
apiVersion: {{ include "common.capabilities.networkpolicy.apiVersion" . }}
metadata:
  name: {{ include "mintel_common.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: {{ .Values.global.partOf }}
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/part-of: {{ .Values.global.partOf }}

{{- range .Values.networkPolicy.additionalAllowFroms }}
---
kind: NetworkPolicy
apiVersion: {{ include "common.capabilities.networkpolicy.apiVersion" . }}
metadata:
  name: {{ printf "%s-to-%s" .fromName (.toName | default $.Values.global.name) }}
  namespace: {{ $.Release.Namespace }}
  annotations: {{ include "mintel_common.commonAnnotations" $ | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ .toName | default $.Values.global.name }}
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: {{ .fromName }}
      ports:
        {{- range .toPorts }}
        - port: {{ .port }}
          protocol: {{ .protocol }}
        {{- end }}
{{- end }}
{{- end }}

{{- if and .Values.ingress.enabled .Values.ingress.alb.enabled }}
# We generate this network policy if routing through the public or
# internal ALB to allow Ingress traffic and healthchecks
#
# If oauthProxy is enabled, by default we assume that traffic is allowed
# to the oauthProxy port 4180, otherwise the main container port.
# Healthchecks can be on a different port to the main application port, so
# we allow this to be specified as well.
---
kind: NetworkPolicy
apiVersion: {{ include "common.capabilities.networkpolicy.apiVersion" . }}
metadata:
  {{- if eq .Values.ingress.alb.scheme "internet-facing" }}
  name: {{ printf "allow-aws-alb-to-%s" .Values.global.name }}
  {{- else }}
  # Assume internal facing
  name: {{ printf "allow-aws-alb-internal-to-%s" .Values.global.name }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: {{ .Values.global.partOf }}
  ingress:
    - from:
      {{- if eq .Values.ingress.alb.scheme "internet-facing" }}
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_0}"
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_1}"
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_2}"
      {{- else }}
      # Assume internal facing
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_0}"
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_1}"
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_2}"
      {{- end }}
      ports:
      {{ $ports := list }}
      {{- if .Values.oauthProxy.enabled }}
      {{ $ports = append $ports 4180 }}
      {{- else }}
      {{ $ports = append $ports .Values.port }}
      {{- end }}
      {{ if .Values.ingress.alb.healthcheck.port }}
      {{ $ports = append $ports .Values.ingress.alb.healthcheck.port }}
      {{- end }}
      {{ $ports := $ports | sortAlpha | uniq | compact }}
      {{- range $ports }}
        - port: {{ . }}
          protocol: TCP
      {{- end }}
{{- end }}

{{- if .Values.nlb.enabled }}
# We generate this network policy if routing through the public or
# internal NLB to allow Ingress traffic
---
kind: NetworkPolicy
apiVersion: {{ include "common.capabilities.networkpolicy.apiVersion" . }}
metadata:
  {{- if eq .Values.nlb.scheme "internet-facing" }}
  name: {{ printf "allow-aws-nlb-to-%s" .Values.global.name }}
  {{- else }}
  # Assume internal facing
  name: {{ printf "allow-aws-nlb-internal-to-%s" .Values.global.name }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
  annotations: {{ include "mintel_common.commonAnnotations" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: {{ .Values.global.partOf }}
  ingress:
    - from:
      {{- if eq .Values.nlb.scheme "internet-facing" }}
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_0}"
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_1}"
      - ipBlock:
          cidr: "${AWS_PUBLIC_SUBNET_CIDR_BLOCKS_2}"
      {{- else }}
      # Assume internal facing
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_0}"
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_1}"
      - ipBlock:
          cidr: "${AWS_PRIVATE_APP_SUBNET_CIDR_BLOCKS_2}"
      {{- end }}
      ports:
      {{ $ports := list }}
      {{ $ports = append $ports .Values.port }}
      {{ $ports := $ports | sortAlpha | uniq | compact }}
      {{- range $ports }}
        - port: {{ . }}
          protocol: TCP
      {{- end }}
{{- end }}
{{- end }}
