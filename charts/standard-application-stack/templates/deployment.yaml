apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "mintel_common.fullname" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if (and .Values.liveness (not .Values.liveness.enabled)) }}
    app.mintel.com/opa-skip-liveness-probe-check.main: "true"
    {{- end }}
    {{- if (and .Values.readiness (not .Values.readiness.enabled)) }}
    app.mintel.com/opa-skip-readiness-probe-check.main: "true"
    {{- end }}
    {{- if (and .Values.filebeatSidecar .Values.filebeatSidecar) }}
    app.mintel.com/opa-skip-readiness-probe-check.filebeat: "true"
    {{- if (and .Values.filebeatSidecar.metrics .Values.filebeatSidecar.metrics.enabled) }}
    app.mintel.com/opa-skip-readiness-probe-check.beat-exporter: "true"
    app.mintel.com/opa-skip-liveness-probe-check.beat-exporter: "true"
    {{- end }}
    {{- end }}
    {{- include "mintel_common.k8snotify" . | nindent 4 }}
    {{- $secretListStr := (include "mintel_common.secretList" .) }}
    {{- with $secretListStr }}
    secret.reloader.stakater.com/reload: {{ . }}
    {{- end }}
    {{- $configmapListStr := (include "mintel_common.configmapList" .) }}
    {{- with $configmapListStr }}
    configmap.reloader.stakater.com/reload: {{ . }}
    {{- end }}
  labels: {{ include "mintel_common.labels" . | nindent 4 }}
    {{- if (and .Values.redis .Values.redis.enabled) }}
    app.mintel.com/redis-client: "true"
    {{- end }}
    {{- if (and .Values.ingress .Values.ingress.enabled) }}
    tier: frontend
    {{- end }}
spec:
  {{- with .Values.minReadySeconds }}
  minReadySeconds: {{ . }}
  {{- end }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 6 }}
  strategy:
    {{- with .Values.strategy }}
    {{- if (and (eq .type "RollingUpdate") (or .maxSurge .maxUnavailable)) }}
    rollingUpdate:
      {{- with .maxSurge }}
      maxSurge: {{ . }}
      {{- end }}
      {{- with .maxUnavailable }}
      maxUnavailable: {{ . }}
      {{- end }}
    {{- end }}
    type: {{ default "RollingUpdate" .type }}
    {{- else }}
    type: RollingUpdate
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if (and .Values.filebeatSidecar .Values.filebeatSidecar.enabled) }}
        {{ include "mintel_common.fullname" . }}-filebeat-hash: {{ include (print $.Template.BasePath "/configmap-filebeat.yaml") . | sha256sum }}
        {{- end }}
      labels: {{ include "mintel_common.labels" . | nindent 8 }}
        {{- if (and .Values.redis .Values.redis.enabled) }}
        app.mintel.com/redis-client: "true"
        {{- end }}
        {{- if (and .Values.ingress .Values.ingress.enabled) }}
        tier: frontend
        {{- end }}
    spec:
      {{- include "mintel_common.imagePullSecrets" . | nindent 6 }}
      {{- with .Values.podSecurityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if (and .Values.serviceAccount (or .Values.serviceAccount.create .Values.serviceAccount.name)) }}
      serviceAccountName: {{ default (include "mintel_common.fullname" .) .Values.serviceAccount.name }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- if (ne .Values.global.clusterEnv "local") }}
      {{- if (and .Values.topologySpreadConstraints .Values.topologySpreadConstraints.enabled) }}
      topologySpreadConstraints:
        {{- if .Values.topologySpreadConstraints.specificYaml }}
        {{- toYaml .Values.topologySpreadConstraints.specificYaml }}
        {{- end }}
        {{- if (and .Values.topologySpreadConstraints.zone .Values.topologySpreadConstraints.zone.enabled) }}
        - labelSelector:
            matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 14 }}
          maxSkew: {{ default 1 .Values.topologySpreadConstraints.zone.maxSkew }}
          topologyKey: failure-domain.beta.kubernetes.io/zone
          whenUnsatisfiable: {{ default "DoNotSchedule" .Values.topologySpreadConstraints.zone.whenUnsatisfiable }}
        {{- end }}
        {{- if (and .Values.topologySpreadConstraints.node .Values.topologySpreadConstraints.node.enabled) }}
        - labelSelector:
            matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 14 }}
          maxSkew: {{ default 1 .Values.topologySpreadConstraints.node.maxSkew }}
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: {{ default "DoNotSchedule" .Values.topologySpreadConstraints.node.whenUnsatisfiable }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if (and (gt (.Values.replicas | int) 1) (and .Values.affinity .Values.affinity.enabled)) }}
      affinity:
        {{- if (and .Values.affinity .Values.affinity.specificYaml) }}
        {{- toYaml .Values.affinity.specificYaml | nindent 8 }}
        {{- else }}
        podAntiAffinity:
        {{- if (and .Values.affinity .Values.affinity.podAntiAffinity) }}
        {{- if .Values.affinity.podAntiAffinity.specificYaml }}
        {{- toYaml .Values.affinity.podAntiAffinity.specificYaml | nindent 10 }}
        {{- else }}
        {{- if (or (eq .Values.affinity.podAntiAffinity.zone "hard") (eq .Values.affinity.podAntiAffinity.node "hard")) }}
          requiredDuringSchedulingIgnoredDuringExecution:
            {{- if (eq .Values.affinity.podAntiAffinity.zone "hard") }}
            - labelSelector:
                matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 18 }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
            {{- end }}
            {{- if (eq .Values.affinity.podAntiAffinity.node "hard") }}
            - labelSelector:
                matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
            {{- end }}
        {{- end }}
        {{- if (or (eq .Values.affinity.podAntiAffinity.zone "soft") (eq .Values.affinity.podAntiAffinity.node "soft")) }}
          preferredDuringSchedulingIgnoredDuringExecution:
            {{- if (eq .Values.affinity.podAntiAffinity.zone "soft") }}
            - podAffinityTerm:
                labelSelector:
                  matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 20 }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: {{ default 100 .Values.affinity.podAntiAffinity.weight }}
            {{- end }}
            {{- if (eq .Values.affinity.podAntiAffinity.node "soft") }}
            - podAffinityTerm:
                labelSelector:
                  matchLabels: {{ include "mintel_common.selectorLabels" . | nindent 20 }}
                topologyKey: kubernetes.io/hostname
              weight: {{ default 100 .Values.affinity.podAntiAffinity.weight }}
            {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.extraInitContainers }}
      initContainers:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: main
          image: {{ include "mintel_common.image" . }}
          imagePullPolicy: {{ include "mintel_common.imagePullPolicy" . }}
          {{- with .Values.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- range $key, $value := . }}
            {{- if $value }}
            - {{ $key }}-{{ $value }}
            {{- else }}
            - {{ $key }}
            {{- end }}
            {{- end }}
          {{- end }}
          env:
            - name: KUBERNETES_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- include "mintel_common.localDevEnv" . | nindent 12 }}
            {{- include "mintel_common.defaultEnv" . | nindent 12 }}
            {{- include "mintel_common.redisEnv" . | nindent 12 }}
            {{- include "mintel_common.mailhogEnv" . | nindent 12 }}
            {{- include "mintel_common.elasticsearchEnv" . | nindent 12 }}
            {{- include "mintel_common.opensearchEnv" . | nindent 12 }}
            {{- include "mintel_common.localstackEnv" . | nindent 12 }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if (and .Values.externalSecret .Values.externalSecret.enabled) }}
            {{- if (or (ne .Values.global.clusterEnv "local") (and (eq .Values.global.clusterEnv "local") .Values.externalSecret.localValues)) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultAppSecretName" .) .Values.externalSecret.nameOverride }}
            {{- end }}
            {{- end }}
            {{- if (and .Values.mariadb .Values.mariadb.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultMariadbSecretName" .) .Values.mariadb.secretNameOverride }}
            {{- end }}
            {{- if (and .Values.redis .Values.redis.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultRedisSecretName" .) .Values.redis.secretNameOverride }}
            {{- end }}
            {{- if (and .Values.elasticsearch .Values.elasticsearch.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultElasticsearchSecretName" .) .Values.elasticsearch.secretNameOverride }}
            {{- end }}
            {{- if (and .Values.opensearch .Values.opensearch.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultOpensearchSecretName" .) .Values.opensearch.secretNameOverride }}
            {{- end }}
            {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.port }}
              name: http
            {{- with .Values.extraPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if (and .Values.liveness .Values.liveness.enabled) }}
          livenessProbe:
            {{- if .Values.liveness.method }}
            {{- toYaml .Values.liveness.method | nindent 12 }}
            {{- else }}
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: {{ default 0 .Values.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ default 1 .Values.liveness.timeoutSeconds }}
          startupProbe:
            {{- if .Values.liveness.method }}
            {{- toYaml .Values.liveness.method | nindent 12 }}
            {{- else }}
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            {{- end }}
            {{- if .Values.liveness.startup }}
            {{- if .Values.liveness.startup.failureThreshold }}
            failureThreshold: {{ .Values.liveness.startup.failureThreshold }}
            {{- else }}
            failureThreshold: 60
            {{- end }}
            {{- if .Values.liveness.startup.periodSeconds }}
            periodSeconds: {{ .Values.liveness.startup.periodSeconds }}
            {{- else }}
            periodSeconds: 5
            {{- end }}
            {{- else }}
            failureThreshold: 60
            periodSeconds: 5
            {{- end }}
          {{- end }}
          {{- if (and .Values.readiness .Values.readiness.enabled) }}
          readinessProbe:
            {{- if .Values.readiness.method }}
            {{- toYaml .Values.readiness.method | nindent 12 }}
            {{- else }}
            httpGet:
              path: /readiness
              port: http
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: {{ default 0 .Values.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ default 1 .Values.readiness.timeoutSeconds }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          {{- end }}
        {{- if (and .Values.filebeatSidecar .Values.filebeatSidecar.enabled) }}
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.5.2
          args:
            - -e
            - -c
            - /config/filebeat.yml
          env:
          - name: CLUSTER_ENV
            value: {{ .Values.global.clusterEnv }}
          - name: CLUSTER_NAME
            value: ${CLUSTER_NAME}
          envFrom:
            {{- if (and .Values.elasticsearch .Values.elasticsearch.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultElasticsearchSecretName" .) .Values.opensearch.secretNameOverride }}
            {{- end }}
            {{- if (and .Values.opensearch .Values.opensearch.enabled) }}
            - secretRef:
                name: {{ default (include "mintel_common.defaultOpensearchSecretName" .) .Values.opensearch.secretNameOverride }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: beat-http
          ports:
          - containerPort: 5066
            name: beat-http
          {{- with .Values.filebeatSidecar.resources }}
          resources:
          {{- toYaml . | nindent 14 }}
          {{- end }}
          volumeMounts:
            - mountPath: /config/
              name: {{ include "mintel_common.fullname" . }}-filebeat
        {{- if (and .Values.filebeatSidecar.metrics .Values.filebeatSidecar.metrics.enabled) }}
        - image: index.docker.io/trustpilot/beat-exporter:0.3.0
          name: beat-exporter
          ports:
          - containerPort: 9479
            name: metrics
          {{- with .Values.filebeatSidecar.metrics.resources }}
          resources:
          {{- toYaml . | nindent 14 }}
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if (or .Values.volumes (and .Values.filebeatSidecar .Values.filebeatSidecar.enabled)) }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if (and .Values.filebeatSidecar .Values.filebeatSidecar.enabled) }}
        - configMap:
            name: {{ include "mintel_common.fullname" . }}-filebeat
          name: {{ include "mintel_common.fullname" . }}-filebeat
        {{- end }}
      {{- end }}
