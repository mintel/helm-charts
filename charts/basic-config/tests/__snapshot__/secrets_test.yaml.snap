Check renders a single external secret:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app-external-secret
      name: test-app-external-secret
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test/external/secret
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
Check renders a single external secret with no overrides:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app-external-secret
      name: test-app-external-secret
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test-namespace/test-app/external-secret
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
Check renders multiple external secrets:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app-external-secret1
      name: test-app-external-secret1
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test/external/secret1
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
  2: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app-external-secret2
      name: test-app-external-secret2
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test/external/secret2
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
Check secret name override:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app
      name: external-secret1
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test/external/secret1
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
Check secret path override:
  1: |
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        helm.sh/chart: basic-config-0.2.3
      labels:
        app.kubernetes.io/managed-by: Helm
        app.mintel.com/env: qa
        app.mintel.com/region: ${CLUSTER_REGION}
        name: test-app-external-secret1
      name: test-app-external-secret1
      namespace: test-namespace
    spec:
      dataFrom:
        - extract:
            key: test/external/secret1
      refreshInterval: 5m0s
      secretStoreRef:
        kind: SecretStore
        name: aws-secrets-manager-local
      target:
        creationPolicy: Owner
