# Default values for aws-api-gateway-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Global variables for us in all charts and sub charts
global:
  # -- Name of the application
  name: "aws-api-gateway-operator"
  # -- Team which "owns" the application
  owner: "SRE"
  # -- Top level application each deployment is a part of
  partOf: "aws-api-gateway-operator"
  # -- Additional labels to apply to all resources
  additionalLabels: {}
  # -- Kubernetes cluster domain
  clusterDomain: "127.0.0.1.nip.io"
  # -- Environment (local, dev, qa, prod)
  clusterEnv: "${CLUSTER_ENV}"
  # -- Kubernetes cluster name
  clusterName: "${CLUSTER_NAME}"
  # -- Global variables relating to cloud provider
  cloudProvider:
    # -- AWS Account Id
    accountId: ""
  # -- Global variable definint RUNTIME_ENVIRONMENT
  runtimeEnvironment: kubernetes

# -- Specifies whether rbac resources should be created
rbac:
  create: true

###
# standard-application-stack subchart
###
# -- values for the standard-application-stack subchart
standard-application-stack:

  # -- Minimum number of seconds before deployments are ready
  minReadySeconds: 10

  # -- Desired number of replicas for main deployment
  replicas: 2

  # -- Explicitly stating that a single replica is required
  # Should only be used if the image truly can't be run multiple times
  # usually involving third party apps or prometheus exporters, etc
  singleReplicaOnly: false

  # -- Docker image values
  image:
    # -- Docker registry used to pull application image
    registry: "registry.gitlab.com"
    # -- Docker repository
    repository: "mintel/satoshi/tools/aws-api-gateway-operator"
    # -- Container image tag
    tag: "v1.0.2"
    # -- Optional ImagePullPolicy
    # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

  # -- Optional array of imagePullSecrets
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # -- Main container port for the application
  # -- Set port to null to skip adding container Ports
  port: 9443

  # -- Optional list of extra container ports to configure
  extraPorts: []
  # extraPorts:
  #   - name: ""
  #     containerPort: 1234

  # -- Optional command to the container
  command:
    - /app/manager

  # -- Optional arguments to the container
  args:
    - '--aws-region=${CLUSTER_REGION}'      # AWS region for the operator (required).
    - '--zap-development-config=false'      # Enable Zap Development mode (WARN logging).

  # -- Optional environment variables injected into the container
  env: []
  # env:
  #   - name: APP_ENVIRONMENT
  #     value: dev

  # -- Optional environment variables injected into the container using envFrom (secrets/configmaps)
  envFrom: []

  # -- Optional name of PriorityClass to run pods with
  priorityClassName: infra

  # -- Additional annotations to apply to the pod
  podAnnotations: {}

  # -- Pod Security context for the container
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  podSecurityContext:
    runAsUser: 1000
  #  fsGroup: 2000

  # -- Pod Disruption Budget
  # ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    enabled: true
    minAvailable: 50%
  #  maxUnavailable: 50%

  # -- Security context for the container
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContext: {}
  # securityContext:
  #   allowPrivilegeEscalation: false
  #   readOnlyRootFilesystem: true
  #   capabilities:
  #     drop: ["ALL"]
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000

  # -- Kubernetes svc configutarion
  service:
    # -- Whether to create Service resource or not
    enabled: true
    # -- Kubernetes Service type
    type: ClusterIP
    # -- Annotations to add to service
    annotations: {}
    # -- Provide any additional labels which may be required.
    labels: {}

  # -- ServiceAccount parameters
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    # -- Determine whether a Service Account should be created or it should reuse a exiting one.
    create: true
    # -- ServiceAccount to use. A name is generated using the mintel_common.fullname template if it is not set
    name: ""
    # -- Additional Service Account annotations
    annotations: {}
    # -- Configures IRSA for the Service Account
    irsa:
      # -- Determines whether service account is IRSA enabled
      enabled: true
      # -- Override for last component of role-arn, ie: accountid-clusterName-namespace-{nameOverride}
      nameOverride: ""
    # -- Whether to automount the service account token or not
    automountServiceAccountToken: true

    # -- Define list of Role's to create and bind to the service account
    # ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
    roles: []
    #  - name: 'main'
    #    rules:
    #    - apiGroups: []
    #      resources: []
    #      verbs: []

    # -- Define list of ClusterRole's to create and bind to the service account
    # ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
    clusterRoles: []
    #  - name: 'main'
    #    rules:
    #    - apiGroups: []
    #      resources: []
    #      verbs: []

  # # -- Configure extra options for liveness probe
  # # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  liveness:
    enabled: true
    methodOverride:
      httpGet:
        # -- Request path for readinessProbe
        path: /healthz
        # -- Port for readinessProbe
        port: 8081
        # -- Scheme (HTTP or HTTPS)
        scheme: HTTP
    path: /healthz
    periodSeconds: 20
    initialDelaySeconds: 15
    startup:
      # -- Failure threshold for startupProbe
      failureThreshold: 60
      # -- Perios seconds for startupProbe
      periodSeconds: 5

  # -- Configure terminationGracePeriodSeconds
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/
  terminationGracePeriodSeconds: 30

  # -- Configure extra options for readiness probe
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  readiness:
    enabled: true
    methodOverride:
      httpGet:
        # -- Request path for readinessProbe
        path: /readyz
        # -- Port for readinessProbe
        port: 8081
        # -- Scheme (HTTP or HTTPS)
        scheme: HTTP
    path: /readyz
    timeoutSeconds: 3
    failureThreshold: 3
    initialDelaySeconds: 5

  # -- Container resource requests and limits
  # ref: http://kubernetes.io/docs/user-guide/compute-resources
  resources:
    limits:
      cpu: "1"
      memory: 256Mi
    requests:
      cpu: 5m
      memory: 50Mi

  # -- Prometheus Exporter / Metrics
  metrics:
    # -- Enable Prometheus to access aplpication metrics endpoints
    enabled: true
    # -- Interval at which metrics should be scraped
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    #  interval: 30s
    # -- URL path to the metrics endpoint
    #  path: /metrics
    # -- Name of the port to use for metrics endpoint
    #  port: http
    # -- Timeout after which the scrape is ended
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    #  timeout: 10s
    # -- Scheme (HTTP ot HTTPS)
    #  scheme: HTTP
    basicAuth:
      enabled: false
      secretName: ""
      usernameKey: ""
      passwordKey: ""
    additionalMonitors: []

  # -- Define ExternalSecret from AWS
  # ref: https://github.com/external-secrets/kubernetes-external-secrets
  externalSecret:
    enabled: false
    #  nameOverride: ""
    #  pathOverride: ""
    #  secretRefreshIntervalOverride: ""
    #  secretStoreRefOverride: ""
    #  localValues:
    #    - name: TEST_SECRET
    #      value: test_value
  extraSecrets: []
  #  - name: ""
  #    pathOverride: ""
  #    pathSuffix: ""
  #    refreshIntervalOverride: ""
  #    secretStoreRefOverride: ""
  #    includeInMain: true # defaults to true if not set
  #    localValues: []

  # -- A list of configuration maps for this application
  configMaps: []
  #    # -- Name of the config map
  #  - name: ""
  #    # -- Whether or not to create the configmap
  #    create: false
  #    # -- List of configs (files) within the configmap
  #    configs:
  #      - name: ""
  #        data: ""

  # -- A list of volumes to be added to the pod
  volumes:
    #  - configMap:
    #      name: portal-web-something
    #    name: portal-web-something

  # -- A list of persistent volume claims to be added to the pod
  persistentVolumes:
    #  - name: brms-drools-workbench-niogit
      #    mode: ReadWriteOnce
      #    size: 100Mi

  # -- A list of volume mounts to be added to the pod
  volumeMounts: []

  # -- Configure the ingress resource that allows you to access the application from public-internet
  # ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Set to true to enable ingress record generation
    enabled: false
    # -- Additional Ingress annotations
    # For a full list of possible ingress annotations, please see
    # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    extraAnnotations: {}
    # -- Enable TLS configuration for the hostname defined at ingress.hostname parameter
    tls: true
    # -- List of extra ingress hosts to setup
    extraHosts: []
    #  extraHosts:
    #    - name: ""
    #      path: ""
    #      pathType: "Prefix"
    #      serviceName: ""
    #      servicePort: ""
    # -- Optional, defines number of seconds to set server-timeout to
    #  serverTimeoutSeconds: 10
    # -- Set to true to allow the liveness URL through the ingress
    allowLivenessUrl: false
    # -- Set to true to allow the readiness URL through the ingress
    allowReadinessUrl: false
    # -- Configures annotations defining blackbox endpoints
    blackbox:
      # -- Set to true to tell blackboxes to hit endpoint
      enabled: true
      # -- Endpoint for blackboxes to hit
      probePath: /external-health-check
    # -- Optional ingress Rules Hosts Yaml that doesn't fit standard pattern
    specificRulesHostsYaml: {}
    # -- Optional ingress Tls Hosts Yaml that doesn't fit standard pattern
    specificTlsHostsYaml: {}
    alb:
      enabled: false
      # -- Public or private alb (internet-facing / internal)
      scheme: internet-facing
      # -- Application Version (HTTP / HTTPS)
      backendProtocol: HTTP
      # -- Application Protocol Version (HTTP1 / HTTP2 / GRPC)
      backendProtocolVersion: HTTP1

      deregistrationDelay:
        timeoutSeconds: 5

      preStopDelay:
        # -- Enable an additional delay when the container is shutdown of delaySeconds.
        # This allows ALB to fully de-register the pod (allows zero-downtime rollouts)
        enabled: true
        # -- The delay (sleep) to wait for.
        # IMPORTANT: The terminationGracePeriodSeconds must be greater than this.
        delaySeconds: 15

      healthcheck:
        # -- Healthcheck protocol
        protocol: HTTP
        # -- Healthcheck success codes
        # successCodes: "200"
        # -- Period seconds
        intervalSeconds: 15
        # -- Healthcheck Request path
        # path: /readiness
        # -- Port (defaults to port specified in Ingress used to direct traffic to service)
        # port: "8000"
        # -- Timeout seconds
        timeoutSeconds: 5
        # -- Failure threshold
        unhealthyThresholdCount: 2
        # -- Success threshold
        healthyThresholdCount: 2

  # -- Define a default NetworkPolicy for allowing apps in the same 'app.kubernetes.io/part-of' group to communicate
  # with eachother.
  # ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  networkPolicy:
    enabled: true
    additionalAllowFroms: []
    #    - fromName: 'brms-bridge'
    #      toName: ''
    #      toPorts: []
    #        - port: 8080
    #          protocol: TCP

  # -- Enable extra init-containers
  extraInitContainers: []

  # -- Enable extraContainers (oauth2-proxy is a common example)
  extraContainers: []
  # extraContainers:
  # - name: oauth2-proxy
  #   image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
  #   ...

  # -- Defines deployment update strategy
  strategy:
    # -- Type of strategy to use (Recreate or RollingUpdate)
    type: RollingUpdate
    # -- Optional argument to define maximum number of pods allowed over defined replicas
    maxSurge: 15%
    # -- Optional argument to define maximum number of pods that can be unavailable during update
    maxUnavailable: 10%

  topologySpreadConstraints:
    enabled: true
    zone:
      enabled: true
      maxSkew: 1
    node:
      # -- Set this to true/false to override the default behaviour (enabled for prod only)
      enabled:
      maxSkew: 1
    # -- Specify custom topologySpreadConstraints yaml
    specificYaml:

  # -- Configure the deployment affinity/anti-affinity rules
  # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity:
    # -- Set to true to enable deployment affinity rules
    enabled: false
    # -- Configure pod anti-affinity rules
    podAntiAffinity:
      # -- Toggle whether zone affinity should be required (hard) or preferred (soft)
      zone: hard
      # -- Toggle whether node affinity should be required (hard) or preferred (soft)
      node: soft
      # -- Optional weight to apply to soft affinity
      #    weight: 200
    # -- Specify custom affinity yaml
    #  specificYaml:
    #    podAntiAffinity:
    #      preferredDuringSchedulingIgnoredDuringExecution:
    #      - podAffinityTerm:
    #          labelSelector:
    #            matchExpressions:
    #            - key: app.kubernetes.io/name
    #              operator: In
    #              values:
    #              - portal-web
    #          topologyKey: topology.kubernetes.io/zone
    #        weight: 100
